
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery/plot_spherical_neighbors.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_gallery_plot_spherical_neighbors.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_plot_spherical_neighbors.py:


Spherical neighbors
===================

Credit: A Grigis

A simple example on how to build spherical neighbors using an icosahedron.

.. GENERATED FROM PYTHON SOURCE LINES 10-14

.. code-block:: Python

    import matplotlib.pyplot as plt
    from surfify.utils import icosahedron, neighbors, get_rectangular_projection
    from surfify.plotting import plot_trisurf








.. GENERATED FROM PYTHON SOURCE LINES 15-19

Direct Neighbor
---------------

Display direct neighbors for some vertices.

.. GENERATED FROM PYTHON SOURCE LINES 19-33

.. code-block:: Python


    vertices, triangles = icosahedron(order=2)
    neighs = neighbors(vertices, triangles, depth=3, direct_neighbor=True)

    fig, ax = plt.subplots(1, 1, subplot_kw={
        "projection": "3d", "aspect": "auto"}, figsize=(10, 10))
    plot_trisurf(vertices, triangles=triangles, colorbar=False, fig=fig, ax=ax,
                 linewidths=0.3)
    for vidx in (4, 40):
        for cnt, idx in enumerate(neighs[vidx]):
            point = vertices[idx]
            ax.scatter(point[0], point[1], point[2], marker="o", s=100)
            ax.text(point[0], point[1], point[2], str(cnt), size=20)




.. image-sg:: /auto_gallery/images/sphx_glr_plot_spherical_neighbors_001.png
   :alt: plot spherical neighbors
   :srcset: /auto_gallery/images/sphx_glr_plot_spherical_neighbors_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 34-39

Rectagular Tangent Plane Neighbor
---------------------------------

Display 3x3 rectangular tangent plane neighbors for some vertices and
the associated projection on the sphere.

.. GENERATED FROM PYTHON SOURCE LINES 39-63

.. code-block:: Python


    zoom = 2
    colors = ["red", "green", "blue", "orange", "purple", "brown", "pink",
              "gray", "olive", "cyan", "yellow", "tan", "salmon", "violet",
              "steelblue", "lime", "navy"] * 5
    fig, ax = plt.subplots(1, 1, subplot_kw={
            "projection": "3d", "aspect": "auto"}, figsize=(10, 10))
    plot_trisurf(vertices, triangles=triangles, fig=fig, ax=ax)
    for idx in (13, 40):
        node = vertices[idx]
        node_rec_neighs, node_tplane_neighs = get_rectangular_projection(
            node, size=3, zoom=zoom)
        ax.scatter(node[0], node[1], node[2], marker="^", c=colors[0], s=100)
        ax.text(point[0], point[1], point[2], 0, size=20)
        for cnt, point in enumerate(node_tplane_neighs):
            ax.scatter(point[0], point[1], point[2], marker="o", c=colors[cnt + 1],
                       s=100)
            ax.text(point[0], point[1], point[2], str(cnt + 1), size=20)
        for cnt, point in enumerate(node_rec_neighs):
            ax.scatter(point[0], point[1], point[2], marker="X", c=colors[cnt + 1],
                       s=100)
            ax.text(point[0], point[1], point[2], str(cnt + 1), size=20)

    plt.show()



.. image-sg:: /auto_gallery/images/sphx_glr_plot_spherical_neighbors_002.png
   :alt: plot spherical neighbors
   :srcset: /auto_gallery/images/sphx_glr_plot_spherical_neighbors_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.225 seconds)

**Estimated memory usage:**  198 MB


.. _sphx_glr_download_auto_gallery_plot_spherical_neighbors.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_spherical_neighbors.ipynb <plot_spherical_neighbors.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_spherical_neighbors.py <plot_spherical_neighbors.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_spherical_neighbors.zip <plot_spherical_neighbors.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
